version: '3.7'

services:
  web:
    build:
      context: ./services/web
      dockerfile: Dockerfile.prod
    command: gunicorn --log-level debug --bind 0.0.0.0:5000 manage:app
    volumes:
      - static_volume:/home/app/web/web_app/static
      - media_volume:/home/app/web/web_app/media
    expose:
      - 5000
    env_file:
      - ./.env.common
      - ./.env.prod
    depends_on:
      - db

  proxy:
    build:
      context: ./services/web
      dockerfile: Dockerfile.prod
    command: python run_proxy.py
      - 54897:54897
      - 4000-4005:4000-4005
    env_file:
      - ./.env.common
      - ./.env.prod
    depends_on:
      - db
      - web

  db:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  nginx:
    image: staticfloat/nginx-certbot
    restart: always
    volumes:
      - static_volume:/home/app/web/web_app/static
      - media_volume:/home/app/web/web_app/media
      - ./services/nginx:/etc/nginx/user.conf.d
      - ./services/html:/etc/nginx/html
      - ./var/nginx:/var/log/nginx
      - ./var/goaccess:/var/goaccess
    environment:
      ENVSUBST_VARS: MAIN_SERVER NGINX_URL
    env_file:
      - ./.env.common
      - ./.env.prod
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

  goaccess:
    image: allinurl/goaccess
    volumes:
      - ./etc/goaccess:/srv/config
      - ./var/goaccess:/srv/report
      - ./var/nginx:/srv/logs
    ports:
      - "7890:7890"
    cap_drop:
      - all
    command: ["--no-global-config", "--config-file=/srv/config/goaccess.conf", "--log-file=/srv/logs/access.log"]
    depends_on:
      - nginx
      - web


volumes:
  postgres_data:
  static_volume:
  media_volume:
